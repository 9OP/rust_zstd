<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1238" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1221.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1221.00"> </text><svg id="frames" x="10" width="1180" total_samples="265"><g><title>net7212`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (17 samples, 6.42%)</title><rect x="0.0000%" y="1045" width="6.4151%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1055.50">net7212`..</text></g><g><title>libsystem_kernel.dylib`write (17 samples, 6.42%)</title><rect x="0.0000%" y="1029" width="6.4151%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1039.50">libsyste..</text></g><g><title>net7212`&lt;net7212::Args as clap_builder::derive::CommandFactory&gt;::command (1 samples, 0.38%)</title><rect x="6.4151%" y="1029" width="0.3774%" height="15" fill="rgb(221,193,54)" fg:x="17" fg:w="1"/><text x="6.6651%" y="1039.50"></text></g><g><title>net7212`&lt;net7212::Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.38%)</title><rect x="6.4151%" y="1013" width="0.3774%" height="15" fill="rgb(248,212,6)" fg:x="17" fg:w="1"/><text x="6.6651%" y="1023.50"></text></g><g><title>net7212`clap_builder::builder::arg_group::ArgGroup::args (1 samples, 0.38%)</title><rect x="6.4151%" y="997" width="0.3774%" height="15" fill="rgb(208,68,35)" fg:x="17" fg:w="1"/><text x="6.6651%" y="1007.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.38%)</title><rect x="6.4151%" y="981" width="0.3774%" height="15" fill="rgb(232,128,0)" fg:x="17" fg:w="1"/><text x="6.6651%" y="991.50"></text></g><g><title>net7212`clap_builder::derive::Parser::parse (2 samples, 0.75%)</title><rect x="6.4151%" y="1045" width="0.7547%" height="15" fill="rgb(207,160,47)" fg:x="17" fg:w="2"/><text x="6.6651%" y="1055.50"></text></g><g><title>net7212`&lt;net7212::Args as clap_builder::derive::FromArgMatches&gt;::from_arg_matches_mut (1 samples, 0.38%)</title><rect x="6.7925%" y="1029" width="0.3774%" height="15" fill="rgb(228,23,34)" fg:x="18" fg:w="1"/><text x="7.0425%" y="1039.50"></text></g><g><title>net7212`clap_builder::parser::matches::arg_matches::ArgMatches::remove_one (1 samples, 0.38%)</title><rect x="6.7925%" y="1013" width="0.3774%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="1"/><text x="7.0425%" y="1023.50"></text></g><g><title>net7212`clap_builder::parser::matches::arg_matches::ArgMatches::try_remove_one (1 samples, 0.38%)</title><rect x="6.7925%" y="997" width="0.3774%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="1"/><text x="7.0425%" y="1007.50"></text></g><g><title>net7212`clap_builder::parser::matches::matched_arg::MatchedArg::into_vals_flatten (1 samples, 0.38%)</title><rect x="6.7925%" y="981" width="0.3774%" height="15" fill="rgb(250,228,42)" fg:x="18" fg:w="1"/><text x="7.0425%" y="991.50"></text></g><g><title>net7212`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString&gt;&gt;&gt; (1 samples, 0.38%)</title><rect x="6.7925%" y="965" width="0.3774%" height="15" fill="rgb(240,193,28)" fg:x="18" fg:w="1"/><text x="7.0425%" y="975.50"></text></g><g><title>net7212`std::thread::scoped::ScopedJoinHandle&lt;T&gt;::join (1 samples, 0.38%)</title><rect x="7.1698%" y="917" width="0.3774%" height="15" fill="rgb(216,20,37)" fg:x="19" fg:w="1"/><text x="7.4198%" y="927.50"></text></g><g><title>net7212`std::thread::JoinInner&lt;T&gt;::join (1 samples, 0.38%)</title><rect x="7.1698%" y="901" width="0.3774%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="1"/><text x="7.4198%" y="911.50"></text></g><g><title>net7212`std::sys::unix::thread::Thread::join (1 samples, 0.38%)</title><rect x="7.1698%" y="885" width="0.3774%" height="15" fill="rgb(217,207,13)" fg:x="19" fg:w="1"/><text x="7.4198%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (1 samples, 0.38%)</title><rect x="7.1698%" y="869" width="0.3774%" height="15" fill="rgb(231,73,38)" fg:x="19" fg:w="1"/><text x="7.4198%" y="879.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::compute_last_weight (1 samples, 0.38%)</title><rect x="7.5472%" y="629" width="0.3774%" height="15" fill="rgb(225,20,46)" fg:x="20" fg:w="1"/><text x="7.7972%" y="639.50"></text></g><g><title>net7212`zstd_lib::literals::LiteralsSection::parse (2 samples, 0.75%)</title><rect x="7.5472%" y="677" width="0.7547%" height="15" fill="rgb(210,31,41)" fg:x="20" fg:w="2"/><text x="7.7972%" y="687.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::parse (2 samples, 0.75%)</title><rect x="7.5472%" y="661" width="0.7547%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="2"/><text x="7.7972%" y="671.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::from_weights (2 samples, 0.75%)</title><rect x="7.5472%" y="645" width="0.7547%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="2"/><text x="7.7972%" y="655.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::from_number_of_bits (1 samples, 0.38%)</title><rect x="7.9245%" y="629" width="0.3774%" height="15" fill="rgb(249,33,26)" fg:x="21" fg:w="1"/><text x="8.1745%" y="639.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="613" width="0.3774%" height="15" fill="rgb(235,183,28)" fg:x="21" fg:w="1"/><text x="8.1745%" y="623.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="597" width="0.3774%" height="15" fill="rgb(221,5,38)" fg:x="21" fg:w="1"/><text x="8.1745%" y="607.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="581" width="0.3774%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="1"/><text x="8.1745%" y="591.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="565" width="0.3774%" height="15" fill="rgb(241,131,45)" fg:x="21" fg:w="1"/><text x="8.1745%" y="575.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="549" width="0.3774%" height="15" fill="rgb(249,31,29)" fg:x="21" fg:w="1"/><text x="8.1745%" y="559.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="533" width="0.3774%" height="15" fill="rgb(225,111,53)" fg:x="21" fg:w="1"/><text x="8.1745%" y="543.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="517" width="0.3774%" height="15" fill="rgb(238,160,17)" fg:x="21" fg:w="1"/><text x="8.1745%" y="527.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="501" width="0.3774%" height="15" fill="rgb(214,148,48)" fg:x="21" fg:w="1"/><text x="8.1745%" y="511.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="485" width="0.3774%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="1"/><text x="8.1745%" y="495.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::insert (1 samples, 0.38%)</title><rect x="7.9245%" y="469" width="0.3774%" height="15" fill="rgb(209,103,24)" fg:x="21" fg:w="1"/><text x="8.1745%" y="479.50"></text></g><g><title>net7212`alloc::alloc::exchange_malloc (1 samples, 0.38%)</title><rect x="7.9245%" y="453" width="0.3774%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="1"/><text x="8.1745%" y="463.50"></text></g><g><title>net7212`alloc::alloc::Global::alloc_impl (1 samples, 0.38%)</title><rect x="7.9245%" y="437" width="0.3774%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="1"/><text x="8.1745%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.38%)</title><rect x="7.9245%" y="421" width="0.3774%" height="15" fill="rgb(254,191,54)" fg:x="21" fg:w="1"/><text x="8.1745%" y="431.50"></text></g><g><title>net7212`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="8.3019%" y="597" width="0.3774%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="1"/><text x="8.5519%" y="607.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::any (1 samples, 0.38%)</title><rect x="8.6792%" y="597" width="0.3774%" height="15" fill="rgb(233,36,39)" fg:x="23" fg:w="1"/><text x="8.9292%" y="607.50"></text></g><g><title>net7212`&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.38%)</title><rect x="8.6792%" y="581" width="0.3774%" height="15" fill="rgb(226,3,54)" fg:x="23" fg:w="1"/><text x="8.9292%" y="591.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.38%)</title><rect x="8.6792%" y="565" width="0.3774%" height="15" fill="rgb(245,192,40)" fg:x="23" fg:w="1"/><text x="8.9292%" y="575.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="8.6792%" y="549" width="0.3774%" height="15" fill="rgb(238,167,29)" fg:x="23" fg:w="1"/><text x="8.9292%" y="559.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.75%)</title><rect x="9.0566%" y="485" width="0.7547%" height="15" fill="rgb(232,182,51)" fg:x="24" fg:w="2"/><text x="9.3066%" y="495.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.75%)</title><rect x="9.0566%" y="469" width="0.7547%" height="15" fill="rgb(231,60,39)" fg:x="24" fg:w="2"/><text x="9.3066%" y="479.50"></text></g><g><title>net7212`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.75%)</title><rect x="9.0566%" y="453" width="0.7547%" height="15" fill="rgb(208,69,12)" fg:x="24" fg:w="2"/><text x="9.3066%" y="463.50"></text></g><g><title>net7212`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.75%)</title><rect x="9.0566%" y="437" width="0.7547%" height="15" fill="rgb(235,93,37)" fg:x="24" fg:w="2"/><text x="9.3066%" y="447.50"></text></g><g><title>net7212`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.75%)</title><rect x="9.0566%" y="421" width="0.7547%" height="15" fill="rgb(213,116,39)" fg:x="24" fg:w="2"/><text x="9.3066%" y="431.50"></text></g><g><title>net7212`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.75%)</title><rect x="9.0566%" y="405" width="0.7547%" height="15" fill="rgb(222,207,29)" fg:x="24" fg:w="2"/><text x="9.3066%" y="415.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.75%)</title><rect x="9.0566%" y="389" width="0.7547%" height="15" fill="rgb(206,96,30)" fg:x="24" fg:w="2"/><text x="9.3066%" y="399.50"></text></g><g><title>net7212`core::iter::adapters::filter::filter_try_fold::_{{closure}} (2 samples, 0.75%)</title><rect x="9.0566%" y="373" width="0.7547%" height="15" fill="rgb(218,138,4)" fg:x="24" fg:w="2"/><text x="9.3066%" y="383.50"></text></g><g><title>net7212`core::iter::adapters::map::map_try_fold::_{{closure}} (2 samples, 0.75%)</title><rect x="9.0566%" y="357" width="0.7547%" height="15" fill="rgb(250,191,14)" fg:x="24" fg:w="2"/><text x="9.3066%" y="367.50"></text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::from_distribution::_{{closure}} (2 samples, 0.75%)</title><rect x="9.0566%" y="341" width="0.7547%" height="15" fill="rgb(239,60,40)" fg:x="24" fg:w="2"/><text x="9.3066%" y="351.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::collect (2 samples, 0.75%)</title><rect x="9.0566%" y="325" width="0.7547%" height="15" fill="rgb(206,27,48)" fg:x="24" fg:w="2"/><text x="9.3066%" y="335.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.75%)</title><rect x="9.0566%" y="309" width="0.7547%" height="15" fill="rgb(225,35,8)" fg:x="24" fg:w="2"/><text x="9.3066%" y="319.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.75%)</title><rect x="9.0566%" y="293" width="0.7547%" height="15" fill="rgb(250,213,24)" fg:x="24" fg:w="2"/><text x="9.3066%" y="303.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.38%)</title><rect x="9.4340%" y="277" width="0.3774%" height="15" fill="rgb(247,123,22)" fg:x="25" fg:w="1"/><text x="9.6840%" y="287.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.38%)</title><rect x="9.4340%" y="261" width="0.3774%" height="15" fill="rgb(231,138,38)" fg:x="25" fg:w="1"/><text x="9.6840%" y="271.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.38%)</title><rect x="9.4340%" y="245" width="0.3774%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="1"/><text x="9.6840%" y="255.50"></text></g><g><title>net7212`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="9.4340%" y="229" width="0.3774%" height="15" fill="rgb(251,118,11)" fg:x="25" fg:w="1"/><text x="9.6840%" y="239.50"></text></g><g><title>net7212`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="9.4340%" y="213" width="0.3774%" height="15" fill="rgb(217,147,25)" fg:x="25" fg:w="1"/><text x="9.6840%" y="223.50"></text></g><g><title>net7212`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="9.4340%" y="197" width="0.3774%" height="15" fill="rgb(247,81,37)" fg:x="25" fg:w="1"/><text x="9.6840%" y="207.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::find (1 samples, 0.38%)</title><rect x="9.4340%" y="181" width="0.3774%" height="15" fill="rgb(209,12,38)" fg:x="25" fg:w="1"/><text x="9.6840%" y="191.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.38%)</title><rect x="9.4340%" y="165" width="0.3774%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="1"/><text x="9.6840%" y="175.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (1 samples, 0.38%)</title><rect x="9.4340%" y="149" width="0.3774%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="1"/><text x="9.6840%" y="159.50"></text></g><g><title>net7212`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.38%)</title><rect x="9.4340%" y="133" width="0.3774%" height="15" fill="rgb(221,10,30)" fg:x="25" fg:w="1"/><text x="9.6840%" y="143.50"></text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::from_distribution::_{{closure}} (1 samples, 0.38%)</title><rect x="9.4340%" y="117" width="0.3774%" height="15" fill="rgb(210,229,1)" fg:x="25" fg:w="1"/><text x="9.6840%" y="127.50"></text></g><g><title>net7212`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.38%)</title><rect x="9.4340%" y="101" width="0.3774%" height="15" fill="rgb(222,148,37)" fg:x="25" fg:w="1"/><text x="9.6840%" y="111.50"></text></g><g><title>net7212`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.38%)</title><rect x="9.4340%" y="85" width="0.3774%" height="15" fill="rgb(234,67,33)" fg:x="25" fg:w="1"/><text x="9.6840%" y="95.50"></text></g><g><title>net7212`hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.38%)</title><rect x="9.4340%" y="69" width="0.3774%" height="15" fill="rgb(247,98,35)" fg:x="25" fg:w="1"/><text x="9.6840%" y="79.50"></text></g><g><title>net7212`hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.38%)</title><rect x="9.4340%" y="53" width="0.3774%" height="15" fill="rgb(247,138,52)" fg:x="25" fg:w="1"/><text x="9.6840%" y="63.50"></text></g><g><title>net7212`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.38%)</title><rect x="9.4340%" y="37" width="0.3774%" height="15" fill="rgb(213,79,30)" fg:x="25" fg:w="1"/><text x="9.6840%" y="47.50"></text></g><g><title>net7212`alloc::slice::_&lt;impl [T]&gt;::sort (1 samples, 0.38%)</title><rect x="9.8113%" y="357" width="0.3774%" height="15" fill="rgb(246,177,23)" fg:x="26" fg:w="1"/><text x="10.0613%" y="367.50"></text></g><g><title>net7212`alloc::slice::stable_sort (1 samples, 0.38%)</title><rect x="9.8113%" y="341" width="0.3774%" height="15" fill="rgb(230,62,27)" fg:x="26" fg:w="1"/><text x="10.0613%" y="351.50"></text></g><g><title>net7212`core::slice::sort::merge_sort (1 samples, 0.38%)</title><rect x="9.8113%" y="325" width="0.3774%" height="15" fill="rgb(216,154,8)" fg:x="26" fg:w="1"/><text x="10.0613%" y="335.50"></text></g><g><title>net7212`&lt;core::iter::sources::successors::Successors&lt;T,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="10.1887%" y="181" width="0.3774%" height="15" fill="rgb(244,35,45)" fg:x="27" fg:w="1"/><text x="10.4387%" y="191.50"></text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::from_distribution::_{{closure}} (1 samples, 0.38%)</title><rect x="10.1887%" y="165" width="0.3774%" height="15" fill="rgb(251,115,12)" fg:x="27" fg:w="1"/><text x="10.4387%" y="175.50"></text></g><g><title>dyld`start (30 samples, 11.32%)</title><rect x="0.0000%" y="1173" width="11.3208%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1183.50">dyld`start</text></g><g><title>net7212`main (30 samples, 11.32%)</title><rect x="0.0000%" y="1157" width="11.3208%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1167.50">net7212`main</text></g><g><title>net7212`std::rt::lang_start (30 samples, 11.32%)</title><rect x="0.0000%" y="1141" width="11.3208%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1151.50">net7212`std::rt::..</text></g><g><title>net7212`std::rt::lang_start_internal (30 samples, 11.32%)</title><rect x="0.0000%" y="1125" width="11.3208%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1135.50">net7212`std::rt::..</text></g><g><title>net7212`std::rt::lang_start::_{{closure}} (30 samples, 11.32%)</title><rect x="0.0000%" y="1109" width="11.3208%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1119.50">net7212`std::rt::..</text></g><g><title>net7212`std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 11.32%)</title><rect x="0.0000%" y="1093" width="11.3208%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1103.50">net7212`std::sys_..</text></g><g><title>net7212`core::ops::function::FnOnce::call_once (30 samples, 11.32%)</title><rect x="0.0000%" y="1077" width="11.3208%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1087.50">net7212`core::ops..</text></g><g><title>net7212`net7212::main (30 samples, 11.32%)</title><rect x="0.0000%" y="1061" width="11.3208%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1071.50">net7212`net7212::..</text></g><g><title>net7212`zstd_lib::decode (11 samples, 4.15%)</title><rect x="7.1698%" y="1045" width="4.1509%" height="15" fill="rgb(253,215,40)" fg:x="19" fg:w="11"/><text x="7.4198%" y="1055.50">net72..</text></g><g><title>net7212`std::thread::scoped::scope (11 samples, 4.15%)</title><rect x="7.1698%" y="1029" width="4.1509%" height="15" fill="rgb(211,81,21)" fg:x="19" fg:w="11"/><text x="7.4198%" y="1039.50">net72..</text></g><g><title>net7212`std::panicking::try (11 samples, 4.15%)</title><rect x="7.1698%" y="1013" width="4.1509%" height="15" fill="rgb(208,190,38)" fg:x="19" fg:w="11"/><text x="7.4198%" y="1023.50">net72..</text></g><g><title>net7212`__rust_try (11 samples, 4.15%)</title><rect x="7.1698%" y="997" width="4.1509%" height="15" fill="rgb(235,213,38)" fg:x="19" fg:w="11"/><text x="7.4198%" y="1007.50">net72..</text></g><g><title>net7212`std::panicking::try::do_call (11 samples, 4.15%)</title><rect x="7.1698%" y="981" width="4.1509%" height="15" fill="rgb(237,122,38)" fg:x="19" fg:w="11"/><text x="7.4198%" y="991.50">net72..</text></g><g><title>net7212`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 4.15%)</title><rect x="7.1698%" y="965" width="4.1509%" height="15" fill="rgb(244,218,35)" fg:x="19" fg:w="11"/><text x="7.4198%" y="975.50">net72..</text></g><g><title>net7212`std::thread::scoped::scope::_{{closure}} (11 samples, 4.15%)</title><rect x="7.1698%" y="949" width="4.1509%" height="15" fill="rgb(240,68,47)" fg:x="19" fg:w="11"/><text x="7.4198%" y="959.50">net72..</text></g><g><title>net7212`zstd_lib::decode::_{{closure}} (11 samples, 4.15%)</title><rect x="7.1698%" y="933" width="4.1509%" height="15" fill="rgb(210,16,53)" fg:x="19" fg:w="11"/><text x="7.4198%" y="943.50">net72..</text></g><g><title>net7212`zstd_lib::parse_frames (10 samples, 3.77%)</title><rect x="7.5472%" y="917" width="3.7736%" height="15" fill="rgb(235,124,12)" fg:x="20" fg:w="10"/><text x="7.7972%" y="927.50">net7..</text></g><g><title>net7212`core::iter::traits::iterator::Iterator::collect (10 samples, 3.77%)</title><rect x="7.5472%" y="901" width="3.7736%" height="15" fill="rgb(224,169,11)" fg:x="20" fg:w="10"/><text x="7.7972%" y="911.50">net7..</text></g><g><title>net7212`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (10 samples, 3.77%)</title><rect x="7.5472%" y="885" width="3.7736%" height="15" fill="rgb(250,166,2)" fg:x="20" fg:w="10"/><text x="7.7972%" y="895.50">net7..</text></g><g><title>net7212`core::iter::adapters::try_process (10 samples, 3.77%)</title><rect x="7.5472%" y="869" width="3.7736%" height="15" fill="rgb(242,216,29)" fg:x="20" fg:w="10"/><text x="7.7972%" y="879.50">net7..</text></g><g><title>net7212`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (10 samples, 3.77%)</title><rect x="7.5472%" y="853" width="3.7736%" height="15" fill="rgb(230,116,27)" fg:x="20" fg:w="10"/><text x="7.7972%" y="863.50">net7..</text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 3.77%)</title><rect x="7.5472%" y="837" width="3.7736%" height="15" fill="rgb(228,99,48)" fg:x="20" fg:w="10"/><text x="7.7972%" y="847.50">net7..</text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 3.77%)</title><rect x="7.5472%" y="821" width="3.7736%" height="15" fill="rgb(253,11,6)" fg:x="20" fg:w="10"/><text x="7.7972%" y="831.50">net7..</text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 3.77%)</title><rect x="7.5472%" y="805" width="3.7736%" height="15" fill="rgb(247,143,39)" fg:x="20" fg:w="10"/><text x="7.7972%" y="815.50">net7..</text></g><g><title>net7212`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 3.77%)</title><rect x="7.5472%" y="789" width="3.7736%" height="15" fill="rgb(236,97,10)" fg:x="20" fg:w="10"/><text x="7.7972%" y="799.50">net7..</text></g><g><title>net7212`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 3.77%)</title><rect x="7.5472%" y="773" width="3.7736%" height="15" fill="rgb(233,208,19)" fg:x="20" fg:w="10"/><text x="7.7972%" y="783.50">net7..</text></g><g><title>net7212`core::iter::traits::iterator::Iterator::try_fold (10 samples, 3.77%)</title><rect x="7.5472%" y="757" width="3.7736%" height="15" fill="rgb(216,164,2)" fg:x="20" fg:w="10"/><text x="7.7972%" y="767.50">net7..</text></g><g><title>net7212`&lt;zstd_lib::frame::FrameIterator as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 3.77%)</title><rect x="7.5472%" y="741" width="3.7736%" height="15" fill="rgb(220,129,5)" fg:x="20" fg:w="10"/><text x="7.7972%" y="751.50">net7..</text></g><g><title>net7212`zstd_lib::frame::Frame::parse (10 samples, 3.77%)</title><rect x="7.5472%" y="725" width="3.7736%" height="15" fill="rgb(242,17,10)" fg:x="20" fg:w="10"/><text x="7.7972%" y="735.50">net7..</text></g><g><title>net7212`zstd_lib::frame::ZstandardFrame::parse (10 samples, 3.77%)</title><rect x="7.5472%" y="709" width="3.7736%" height="15" fill="rgb(242,107,0)" fg:x="20" fg:w="10"/><text x="7.7972%" y="719.50">net7..</text></g><g><title>net7212`zstd_lib::block::Block::parse (10 samples, 3.77%)</title><rect x="7.5472%" y="693" width="3.7736%" height="15" fill="rgb(251,28,31)" fg:x="20" fg:w="10"/><text x="7.7972%" y="703.50">net7..</text></g><g><title>net7212`zstd_lib::sequences::Sequences::parse (8 samples, 3.02%)</title><rect x="8.3019%" y="677" width="3.0189%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="8"/><text x="8.5519%" y="687.50">net..</text></g><g><title>net7212`zstd_lib::sequences::Sequences::parse_compression_modes (8 samples, 3.02%)</title><rect x="8.3019%" y="661" width="3.0189%" height="15" fill="rgb(215,21,27)" fg:x="22" fg:w="8"/><text x="8.5519%" y="671.50">net..</text></g><g><title>net7212`zstd_lib::sequences::SymbolCompressor::parse (8 samples, 3.02%)</title><rect x="8.3019%" y="645" width="3.0189%" height="15" fill="rgb(232,23,21)" fg:x="22" fg:w="8"/><text x="8.5519%" y="655.50">net..</text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::parse (8 samples, 3.02%)</title><rect x="8.3019%" y="629" width="3.0189%" height="15" fill="rgb(244,5,23)" fg:x="22" fg:w="8"/><text x="8.5519%" y="639.50">net..</text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::from_distribution (8 samples, 3.02%)</title><rect x="8.3019%" y="613" width="3.0189%" height="15" fill="rgb(226,81,46)" fg:x="22" fg:w="8"/><text x="8.5519%" y="623.50">net..</text></g><g><title>net7212`core::iter::traits::iterator::Iterator::collect (6 samples, 2.26%)</title><rect x="9.0566%" y="597" width="2.2642%" height="15" fill="rgb(247,70,30)" fg:x="24" fg:w="6"/><text x="9.3066%" y="607.50">n..</text></g><g><title>net7212`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (6 samples, 2.26%)</title><rect x="9.0566%" y="581" width="2.2642%" height="15" fill="rgb(212,68,19)" fg:x="24" fg:w="6"/><text x="9.3066%" y="591.50">n..</text></g><g><title>net7212`core::iter::adapters::try_process (6 samples, 2.26%)</title><rect x="9.0566%" y="565" width="2.2642%" height="15" fill="rgb(240,187,13)" fg:x="24" fg:w="6"/><text x="9.3066%" y="575.50">n..</text></g><g><title>net7212`&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (6 samples, 2.26%)</title><rect x="9.0566%" y="549" width="2.2642%" height="15" fill="rgb(223,113,26)" fg:x="24" fg:w="6"/><text x="9.3066%" y="559.50">n..</text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 2.26%)</title><rect x="9.0566%" y="533" width="2.2642%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="6"/><text x="9.3066%" y="543.50">n..</text></g><g><title>net7212`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 2.26%)</title><rect x="9.0566%" y="517" width="2.2642%" height="15" fill="rgb(241,108,4)" fg:x="24" fg:w="6"/><text x="9.3066%" y="527.50">n..</text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 2.26%)</title><rect x="9.0566%" y="501" width="2.2642%" height="15" fill="rgb(247,173,49)" fg:x="24" fg:w="6"/><text x="9.3066%" y="511.50">n..</text></g><g><title>net7212`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.51%)</title><rect x="9.8113%" y="485" width="1.5094%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="4"/><text x="10.0613%" y="495.50"></text></g><g><title>net7212`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 1.51%)</title><rect x="9.8113%" y="469" width="1.5094%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="4"/><text x="10.0613%" y="479.50"></text></g><g><title>net7212`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 1.51%)</title><rect x="9.8113%" y="453" width="1.5094%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="4"/><text x="10.0613%" y="463.50"></text></g><g><title>net7212`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 1.51%)</title><rect x="9.8113%" y="437" width="1.5094%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="4"/><text x="10.0613%" y="447.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::try_fold (4 samples, 1.51%)</title><rect x="9.8113%" y="421" width="1.5094%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="4"/><text x="10.0613%" y="431.50"></text></g><g><title>net7212`core::iter::adapters::filter::filter_try_fold::_{{closure}} (4 samples, 1.51%)</title><rect x="9.8113%" y="405" width="1.5094%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="4"/><text x="10.0613%" y="415.50"></text></g><g><title>net7212`core::iter::adapters::map::map_try_fold::_{{closure}} (4 samples, 1.51%)</title><rect x="9.8113%" y="389" width="1.5094%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="4"/><text x="10.0613%" y="399.50"></text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::from_distribution::_{{closure}} (4 samples, 1.51%)</title><rect x="9.8113%" y="373" width="1.5094%" height="15" fill="rgb(217,125,39)" fg:x="26" fg:w="4"/><text x="10.0613%" y="383.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::collect (3 samples, 1.13%)</title><rect x="10.1887%" y="357" width="1.1321%" height="15" fill="rgb(235,36,10)" fg:x="27" fg:w="3"/><text x="10.4387%" y="367.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 1.13%)</title><rect x="10.1887%" y="341" width="1.1321%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="3"/><text x="10.4387%" y="351.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 1.13%)</title><rect x="10.1887%" y="325" width="1.1321%" height="15" fill="rgb(221,13,13)" fg:x="27" fg:w="3"/><text x="10.4387%" y="335.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 1.13%)</title><rect x="10.1887%" y="309" width="1.1321%" height="15" fill="rgb(238,131,9)" fg:x="27" fg:w="3"/><text x="10.4387%" y="319.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 1.13%)</title><rect x="10.1887%" y="293" width="1.1321%" height="15" fill="rgb(211,50,8)" fg:x="27" fg:w="3"/><text x="10.4387%" y="303.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 1.13%)</title><rect x="10.1887%" y="277" width="1.1321%" height="15" fill="rgb(245,182,24)" fg:x="27" fg:w="3"/><text x="10.4387%" y="287.50"></text></g><g><title>net7212`&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.13%)</title><rect x="10.1887%" y="261" width="1.1321%" height="15" fill="rgb(242,14,37)" fg:x="27" fg:w="3"/><text x="10.4387%" y="271.50"></text></g><g><title>net7212`&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.13%)</title><rect x="10.1887%" y="245" width="1.1321%" height="15" fill="rgb(246,228,12)" fg:x="27" fg:w="3"/><text x="10.4387%" y="255.50"></text></g><g><title>net7212`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.13%)</title><rect x="10.1887%" y="229" width="1.1321%" height="15" fill="rgb(213,55,15)" fg:x="27" fg:w="3"/><text x="10.4387%" y="239.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::find (3 samples, 1.13%)</title><rect x="10.1887%" y="213" width="1.1321%" height="15" fill="rgb(209,9,3)" fg:x="27" fg:w="3"/><text x="10.4387%" y="223.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::try_fold (3 samples, 1.13%)</title><rect x="10.1887%" y="197" width="1.1321%" height="15" fill="rgb(230,59,30)" fg:x="27" fg:w="3"/><text x="10.4387%" y="207.50"></text></g><g><title>net7212`core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2 samples, 0.75%)</title><rect x="10.5660%" y="181" width="0.7547%" height="15" fill="rgb(209,121,21)" fg:x="28" fg:w="2"/><text x="10.8160%" y="191.50"></text></g><g><title>net7212`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.75%)</title><rect x="10.5660%" y="165" width="0.7547%" height="15" fill="rgb(220,109,13)" fg:x="28" fg:w="2"/><text x="10.8160%" y="175.50"></text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::from_distribution::_{{closure}} (2 samples, 0.75%)</title><rect x="10.5660%" y="149" width="0.7547%" height="15" fill="rgb(232,18,1)" fg:x="28" fg:w="2"/><text x="10.8160%" y="159.50"></text></g><g><title>net7212`std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.75%)</title><rect x="10.5660%" y="133" width="0.7547%" height="15" fill="rgb(215,41,42)" fg:x="28" fg:w="2"/><text x="10.8160%" y="143.50"></text></g><g><title>net7212`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.75%)</title><rect x="10.5660%" y="117" width="0.7547%" height="15" fill="rgb(224,123,36)" fg:x="28" fg:w="2"/><text x="10.8160%" y="127.50"></text></g><g><title>net7212`core::hash::BuildHasher::hash_one (2 samples, 0.75%)</title><rect x="10.5660%" y="101" width="0.7547%" height="15" fill="rgb(240,125,3)" fg:x="28" fg:w="2"/><text x="10.8160%" y="111.50"></text></g><g><title>net7212`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.75%)</title><rect x="10.5660%" y="85" width="0.7547%" height="15" fill="rgb(205,98,50)" fg:x="28" fg:w="2"/><text x="10.8160%" y="95.50"></text></g><g><title>net7212`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.75%)</title><rect x="10.5660%" y="69" width="0.7547%" height="15" fill="rgb(205,185,37)" fg:x="28" fg:w="2"/><text x="10.8160%" y="79.50"></text></g><g><title>net7212`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.75%)</title><rect x="10.5660%" y="53" width="0.7547%" height="15" fill="rgb(238,207,15)" fg:x="28" fg:w="2"/><text x="10.8160%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.38%)</title><rect x="11.3208%" y="1173" width="0.3774%" height="15" fill="rgb(213,199,42)" fg:x="30" fg:w="1"/><text x="11.5708%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`__sigaltstack (1 samples, 0.38%)</title><rect x="11.6981%" y="1125" width="0.3774%" height="15" fill="rgb(235,201,11)" fg:x="31" fg:w="1"/><text x="11.9481%" y="1135.50"></text></g><g><title>net7212`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.38%)</title><rect x="12.0755%" y="965" width="0.3774%" height="15" fill="rgb(207,46,11)" fg:x="32" fg:w="1"/><text x="12.3255%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.38%)</title><rect x="12.8302%" y="821" width="0.3774%" height="15" fill="rgb(241,35,35)" fg:x="34" fg:w="1"/><text x="13.0802%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (1 samples, 0.38%)</title><rect x="12.8302%" y="805" width="0.3774%" height="15" fill="rgb(243,32,47)" fg:x="34" fg:w="1"/><text x="13.0802%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`mvm_allocate_pages (1 samples, 0.38%)</title><rect x="12.8302%" y="789" width="0.3774%" height="15" fill="rgb(247,202,23)" fg:x="34" fg:w="1"/><text x="13.0802%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_map_trap (1 samples, 0.38%)</title><rect x="12.8302%" y="773" width="0.3774%" height="15" fill="rgb(219,102,11)" fg:x="34" fg:w="1"/><text x="13.0802%" y="783.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 1.13%)</title><rect x="12.4528%" y="965" width="1.1321%" height="15" fill="rgb(243,110,44)" fg:x="33" fg:w="3"/><text x="12.7028%" y="975.50"></text></g><g><title>net7212`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.75%)</title><rect x="12.8302%" y="949" width="0.7547%" height="15" fill="rgb(222,74,54)" fg:x="34" fg:w="2"/><text x="13.0802%" y="959.50"></text></g><g><title>net7212`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.75%)</title><rect x="12.8302%" y="933" width="0.7547%" height="15" fill="rgb(216,99,12)" fg:x="34" fg:w="2"/><text x="13.0802%" y="943.50"></text></g><g><title>net7212`alloc::raw_vec::finish_grow (2 samples, 0.75%)</title><rect x="12.8302%" y="917" width="0.7547%" height="15" fill="rgb(226,22,26)" fg:x="34" fg:w="2"/><text x="13.0802%" y="927.50"></text></g><g><title>net7212`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.75%)</title><rect x="12.8302%" y="901" width="0.7547%" height="15" fill="rgb(217,163,10)" fg:x="34" fg:w="2"/><text x="13.0802%" y="911.50"></text></g><g><title>net7212`alloc::alloc::Global::grow_impl (2 samples, 0.75%)</title><rect x="12.8302%" y="885" width="0.7547%" height="15" fill="rgb(213,25,53)" fg:x="34" fg:w="2"/><text x="13.0802%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.75%)</title><rect x="12.8302%" y="869" width="0.7547%" height="15" fill="rgb(252,105,26)" fg:x="34" fg:w="2"/><text x="13.0802%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.75%)</title><rect x="12.8302%" y="853" width="0.7547%" height="15" fill="rgb(220,39,43)" fg:x="34" fg:w="2"/><text x="13.0802%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.75%)</title><rect x="12.8302%" y="837" width="0.7547%" height="15" fill="rgb(229,68,48)" fg:x="34" fg:w="2"/><text x="13.0802%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.38%)</title><rect x="13.2075%" y="821" width="0.3774%" height="15" fill="rgb(252,8,32)" fg:x="35" fg:w="1"/><text x="13.4575%" y="831.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.75%)</title><rect x="16.2264%" y="949" width="0.7547%" height="15" fill="rgb(223,20,43)" fg:x="43" fg:w="2"/><text x="16.4764%" y="959.50"></text></g><g><title>net7212`&lt;zstd_lib::decoders::fse::FseDecoder as zstd_lib::decoders::bit_decoder::BitDecoder&lt;u16,zstd_lib::decoders::DecoderError&gt;&gt;::update_bits (4 samples, 1.51%)</title><rect x="16.9811%" y="949" width="1.5094%" height="15" fill="rgb(229,81,49)" fg:x="45" fg:w="4"/><text x="17.2311%" y="959.50"></text></g><g><title>net7212`&lt;zstd_lib::decoders::fse::FseDecoder as zstd_lib::decoders::bit_decoder::BitDecoder&lt;u16,zstd_lib::decoders::DecoderError&gt;&gt;::symbol (3 samples, 1.13%)</title><rect x="18.8679%" y="933" width="1.1321%" height="15" fill="rgb(236,28,36)" fg:x="50" fg:w="3"/><text x="19.1179%" y="943.50"></text></g><g><title>net7212`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.38%)</title><rect x="19.6226%" y="917" width="0.3774%" height="15" fill="rgb(249,185,26)" fg:x="52" fg:w="1"/><text x="19.8726%" y="927.50"></text></g><g><title>net7212`&lt;zstd_lib::decoders::sequence::SequenceDecoder as zstd_lib::decoders::bit_decoder::BitDecoder&lt;(u16,u16,u16),zstd_lib::decoders::DecoderError&gt;&gt;::symbol (5 samples, 1.89%)</title><rect x="18.4906%" y="949" width="1.8868%" height="15" fill="rgb(249,174,33)" fg:x="49" fg:w="5"/><text x="18.7406%" y="959.50">n..</text></g><g><title>net7212`core::option::Option&lt;T&gt;::unwrap (1 samples, 0.38%)</title><rect x="20.0000%" y="933" width="0.3774%" height="15" fill="rgb(233,201,37)" fg:x="53" fg:w="1"/><text x="20.2500%" y="943.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.75%)</title><rect x="21.5094%" y="933" width="0.7547%" height="15" fill="rgb(221,78,26)" fg:x="57" fg:w="2"/><text x="21.7594%" y="943.50"></text></g><g><title>net7212`&lt;&amp;u8 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1 samples, 0.38%)</title><rect x="24.1509%" y="917" width="0.3774%" height="15" fill="rgb(250,127,30)" fg:x="64" fg:w="1"/><text x="24.4009%" y="927.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.38%)</title><rect x="24.5283%" y="917" width="0.3774%" height="15" fill="rgb(230,49,44)" fg:x="65" fg:w="1"/><text x="24.7783%" y="927.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.75%)</title><rect x="24.9057%" y="917" width="0.7547%" height="15" fill="rgb(229,67,23)" fg:x="66" fg:w="2"/><text x="25.1557%" y="927.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.38%)</title><rect x="25.6604%" y="917" width="0.3774%" height="15" fill="rgb(249,83,47)" fg:x="68" fg:w="1"/><text x="25.9104%" y="927.50"></text></g><g><title>net7212`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.38%)</title><rect x="26.0377%" y="917" width="0.3774%" height="15" fill="rgb(215,43,3)" fg:x="69" fg:w="1"/><text x="26.2877%" y="927.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.38%)</title><rect x="27.5472%" y="901" width="0.3774%" height="15" fill="rgb(238,154,13)" fg:x="73" fg:w="1"/><text x="27.7972%" y="911.50"></text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::get (5 samples, 1.89%)</title><rect x="26.4151%" y="917" width="1.8868%" height="15" fill="rgb(219,56,2)" fg:x="70" fg:w="5"/><text x="26.6651%" y="927.50">n..</text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.38%)</title><rect x="27.9245%" y="901" width="0.3774%" height="15" fill="rgb(233,0,4)" fg:x="74" fg:w="1"/><text x="28.1745%" y="911.50"></text></g><g><title>net7212`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.38%)</title><rect x="27.9245%" y="885" width="0.3774%" height="15" fill="rgb(235,30,7)" fg:x="74" fg:w="1"/><text x="28.1745%" y="895.50"></text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::available_bits (2 samples, 0.75%)</title><rect x="28.3019%" y="917" width="0.7547%" height="15" fill="rgb(250,79,13)" fg:x="75" fg:w="2"/><text x="28.5519%" y="927.50"></text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::is_empty (1 samples, 0.38%)</title><rect x="28.6792%" y="901" width="0.3774%" height="15" fill="rgb(211,146,34)" fg:x="76" fg:w="1"/><text x="28.9292%" y="911.50"></text></g><g><title>net7212`&lt;&amp;u8 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1 samples, 0.38%)</title><rect x="35.0943%" y="901" width="0.3774%" height="15" fill="rgb(228,22,38)" fg:x="93" fg:w="1"/><text x="35.3443%" y="911.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.51%)</title><rect x="35.4717%" y="901" width="1.5094%" height="15" fill="rgb(235,168,5)" fg:x="94" fg:w="4"/><text x="35.7217%" y="911.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 1.51%)</title><rect x="35.4717%" y="885" width="1.5094%" height="15" fill="rgb(221,155,16)" fg:x="94" fg:w="4"/><text x="35.7217%" y="895.50"></text></g><g><title>net7212`core::cmp::min (6 samples, 2.26%)</title><rect x="36.9811%" y="901" width="2.2642%" height="15" fill="rgb(215,215,53)" fg:x="98" fg:w="6"/><text x="37.2311%" y="911.50">n..</text></g><g><title>net7212`core::cmp::Ord::min (6 samples, 2.26%)</title><rect x="36.9811%" y="885" width="2.2642%" height="15" fill="rgb(223,4,10)" fg:x="98" fg:w="6"/><text x="37.2311%" y="895.50">n..</text></g><g><title>net7212`core::cmp::min_by (5 samples, 1.89%)</title><rect x="37.3585%" y="869" width="1.8868%" height="15" fill="rgb(234,103,6)" fg:x="99" fg:w="5"/><text x="37.6085%" y="879.50">n..</text></g><g><title>net7212`core::ops::function::FnOnce::call_once (2 samples, 0.75%)</title><rect x="38.4906%" y="853" width="0.7547%" height="15" fill="rgb(227,97,0)" fg:x="102" fg:w="2"/><text x="38.7406%" y="863.50"></text></g><g><title>net7212`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.38%)</title><rect x="38.8679%" y="837" width="0.3774%" height="15" fill="rgb(234,150,53)" fg:x="103" fg:w="1"/><text x="39.1179%" y="847.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.38%)</title><rect x="39.2453%" y="901" width="0.3774%" height="15" fill="rgb(228,201,54)" fg:x="104" fg:w="1"/><text x="39.4953%" y="911.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (2 samples, 0.75%)</title><rect x="39.6226%" y="901" width="0.7547%" height="15" fill="rgb(222,22,37)" fg:x="105" fg:w="2"/><text x="39.8726%" y="911.50"></text></g><g><title>net7212`&lt;zstd_lib::decoders::fse::FseDecoder as zstd_lib::decoders::bit_decoder::BitDecoder&lt;u16,zstd_lib::decoders::DecoderError&gt;&gt;::update_bits (49 samples, 18.49%)</title><rect x="22.2642%" y="933" width="18.4906%" height="15" fill="rgb(237,53,32)" fg:x="59" fg:w="49"/><text x="22.5142%" y="943.50">net7212`&lt;zstd_lib::decoders::..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (31 samples, 11.70%)</title><rect x="29.0566%" y="917" width="11.6981%" height="15" fill="rgb(233,25,53)" fg:x="77" fg:w="31"/><text x="29.3066%" y="927.50">net7212`zstd_lib:..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::available_bits (1 samples, 0.38%)</title><rect x="40.3774%" y="901" width="0.3774%" height="15" fill="rgb(210,40,34)" fg:x="107" fg:w="1"/><text x="40.6274%" y="911.50"></text></g><g><title>net7212`&lt;zstd_lib::decoders::sequence::SequenceDecoder as zstd_lib::decoders::bit_decoder::BitDecoder&lt;(u16,u16,u16),zstd_lib::decoders::DecoderError&gt;&gt;::update_bits (55 samples, 20.75%)</title><rect x="20.3774%" y="949" width="20.7547%" height="15" fill="rgb(241,220,44)" fg:x="54" fg:w="55"/><text x="20.6274%" y="959.50">net7212`&lt;zstd_lib::decoders::sequ..</text></g><g><title>net7212`zstd_lib::decoders::fse::FseTable::get (1 samples, 0.38%)</title><rect x="40.7547%" y="933" width="0.3774%" height="15" fill="rgb(235,28,35)" fg:x="108" fg:w="1"/><text x="41.0047%" y="943.50"></text></g><g><title>net7212`core::cmp::min (1 samples, 0.38%)</title><rect x="41.1321%" y="949" width="0.3774%" height="15" fill="rgb(210,56,17)" fg:x="109" fg:w="1"/><text x="41.3821%" y="959.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="41.5094%" y="949" width="0.3774%" height="15" fill="rgb(224,130,29)" fg:x="110" fg:w="1"/><text x="41.7594%" y="959.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.75%)</title><rect x="47.1698%" y="933" width="0.7547%" height="15" fill="rgb(235,212,8)" fg:x="125" fg:w="2"/><text x="47.4198%" y="943.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.75%)</title><rect x="47.1698%" y="917" width="0.7547%" height="15" fill="rgb(223,33,50)" fg:x="125" fg:w="2"/><text x="47.4198%" y="927.50"></text></g><g><title>net7212`core::cmp::min_by (7 samples, 2.64%)</title><rect x="47.9245%" y="901" width="2.6415%" height="15" fill="rgb(219,149,13)" fg:x="127" fg:w="7"/><text x="48.1745%" y="911.50">ne..</text></g><g><title>net7212`core::ops::function::FnOnce::call_once (1 samples, 0.38%)</title><rect x="50.1887%" y="885" width="0.3774%" height="15" fill="rgb(250,156,29)" fg:x="133" fg:w="1"/><text x="50.4387%" y="895.50"></text></g><g><title>net7212`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.38%)</title><rect x="50.1887%" y="869" width="0.3774%" height="15" fill="rgb(216,193,19)" fg:x="133" fg:w="1"/><text x="50.4387%" y="879.50"></text></g><g><title>net7212`core::cmp::min (8 samples, 3.02%)</title><rect x="47.9245%" y="933" width="3.0189%" height="15" fill="rgb(216,135,14)" fg:x="127" fg:w="8"/><text x="48.1745%" y="943.50">net..</text></g><g><title>net7212`core::cmp::Ord::min (8 samples, 3.02%)</title><rect x="47.9245%" y="917" width="3.0189%" height="15" fill="rgb(241,47,5)" fg:x="127" fg:w="8"/><text x="48.1745%" y="927.50">net..</text></g><g><title>net7212`core::ops::function::FnOnce::call_once (1 samples, 0.38%)</title><rect x="50.5660%" y="901" width="0.3774%" height="15" fill="rgb(233,42,35)" fg:x="134" fg:w="1"/><text x="50.8160%" y="911.50"></text></g><g><title>net7212`zstd_lib::block::Block::decode::_{{closure}}::_{{closure}} (104 samples, 39.25%)</title><rect x="12.0755%" y="997" width="39.2453%" height="15" fill="rgb(231,13,6)" fg:x="32" fg:w="104"/><text x="12.3255%" y="1007.50">net7212`zstd_lib::block::Block::decode::_{{closure}}::_{{closure..</text></g><g><title>net7212`zstd_lib::sequences::Sequences::decode (104 samples, 39.25%)</title><rect x="12.0755%" y="981" width="39.2453%" height="15" fill="rgb(207,181,40)" fg:x="32" fg:w="104"/><text x="12.3255%" y="991.50">net7212`zstd_lib::sequences::Sequences::decode</text></g><g><title>net7212`zstd_lib::sequences::Sequences::decode_sequence (100 samples, 37.74%)</title><rect x="13.5849%" y="965" width="37.7358%" height="15" fill="rgb(254,173,49)" fg:x="36" fg:w="100"/><text x="13.8349%" y="975.50">net7212`zstd_lib::sequences::Sequences::decode_sequence</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (25 samples, 9.43%)</title><rect x="41.8868%" y="949" width="9.4340%" height="15" fill="rgb(221,1,38)" fg:x="111" fg:w="25"/><text x="42.1368%" y="959.50">net7212`zstd_..</text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="50.9434%" y="933" width="0.3774%" height="15" fill="rgb(206,124,46)" fg:x="135" fg:w="1"/><text x="51.1934%" y="943.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.75%)</title><rect x="51.6981%" y="821" width="0.7547%" height="15" fill="rgb(249,21,11)" fg:x="137" fg:w="2"/><text x="51.9481%" y="831.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.75%)</title><rect x="52.4528%" y="821" width="0.7547%" height="15" fill="rgb(222,201,40)" fg:x="139" fg:w="2"/><text x="52.7028%" y="831.50"></text></g><g><title>net7212`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.38%)</title><rect x="53.2075%" y="821" width="0.3774%" height="15" fill="rgb(235,61,29)" fg:x="141" fg:w="1"/><text x="53.4575%" y="831.50"></text></g><g><title>net7212`core::option::Option&lt;T&gt;::ok_or (1 samples, 0.38%)</title><rect x="53.5849%" y="821" width="0.3774%" height="15" fill="rgb(219,207,3)" fg:x="142" fg:w="1"/><text x="53.8349%" y="831.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.75%)</title><rect x="59.6226%" y="805" width="0.7547%" height="15" fill="rgb(222,56,46)" fg:x="158" fg:w="2"/><text x="59.8726%" y="815.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.75%)</title><rect x="60.3774%" y="805" width="0.7547%" height="15" fill="rgb(239,76,54)" fg:x="160" fg:w="2"/><text x="60.6274%" y="815.50"></text></g><g><title>net7212`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.38%)</title><rect x="61.1321%" y="805" width="0.3774%" height="15" fill="rgb(231,124,27)" fg:x="162" fg:w="1"/><text x="61.3821%" y="815.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 1.13%)</title><rect x="61.5094%" y="805" width="1.1321%" height="15" fill="rgb(249,195,6)" fg:x="163" fg:w="3"/><text x="61.7594%" y="815.50"></text></g><g><title>net7212`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.75%)</title><rect x="61.8868%" y="789" width="0.7547%" height="15" fill="rgb(237,174,47)" fg:x="164" fg:w="2"/><text x="62.1368%" y="799.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.75%)</title><rect x="61.8868%" y="773" width="0.7547%" height="15" fill="rgb(206,201,31)" fg:x="164" fg:w="2"/><text x="62.1368%" y="783.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 1.13%)</title><rect x="62.6415%" y="805" width="1.1321%" height="15" fill="rgb(231,57,52)" fg:x="166" fg:w="3"/><text x="62.8915%" y="815.50"></text></g><g><title>net7212`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 1.51%)</title><rect x="63.7736%" y="789" width="1.5094%" height="15" fill="rgb(248,177,22)" fg:x="169" fg:w="4"/><text x="64.0236%" y="799.50"></text></g><g><title>net7212`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 3.02%)</title><rect x="63.7736%" y="805" width="3.0189%" height="15" fill="rgb(215,211,37)" fg:x="169" fg:w="8"/><text x="64.0236%" y="815.50">net..</text></g><g><title>net7212`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 1.51%)</title><rect x="65.2830%" y="789" width="1.5094%" height="15" fill="rgb(241,128,51)" fg:x="173" fg:w="4"/><text x="65.5330%" y="799.50"></text></g><g><title>net7212`core::option::Option&lt;T&gt;::ok_or (4 samples, 1.51%)</title><rect x="66.7925%" y="805" width="1.5094%" height="15" fill="rgb(227,165,31)" fg:x="177" fg:w="4"/><text x="67.0425%" y="815.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::get (1 samples, 0.38%)</title><rect x="68.3019%" y="805" width="0.3774%" height="15" fill="rgb(228,167,24)" fg:x="181" fg:w="1"/><text x="68.5519%" y="815.50"></text></g><g><title>net7212`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.38%)</title><rect x="68.3019%" y="789" width="0.3774%" height="15" fill="rgb(228,143,12)" fg:x="181" fg:w="1"/><text x="68.5519%" y="799.50"></text></g><g><title>net7212`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.75%)</title><rect x="68.6792%" y="805" width="0.7547%" height="15" fill="rgb(249,149,8)" fg:x="182" fg:w="2"/><text x="68.9292%" y="815.50"></text></g><g><title>net7212`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.75%)</title><rect x="68.6792%" y="789" width="0.7547%" height="15" fill="rgb(243,35,44)" fg:x="182" fg:w="2"/><text x="68.9292%" y="799.50"></text></g><g><title>net7212`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.75%)</title><rect x="68.6792%" y="773" width="0.7547%" height="15" fill="rgb(246,89,9)" fg:x="182" fg:w="2"/><text x="68.9292%" y="783.50"></text></g><g><title>net7212`zstd_lib::block::Block::decode (49 samples, 18.49%)</title><rect x="51.3208%" y="965" width="18.4906%" height="15" fill="rgb(233,213,13)" fg:x="136" fg:w="49"/><text x="51.5708%" y="975.50">net7212`zstd_lib::block::Bloc..</text></g><g><title>net7212`std::thread::scoped::scope (49 samples, 18.49%)</title><rect x="51.3208%" y="949" width="18.4906%" height="15" fill="rgb(233,141,41)" fg:x="136" fg:w="49"/><text x="51.5708%" y="959.50">net7212`std::thread::scoped::..</text></g><g><title>net7212`std::panicking::try (49 samples, 18.49%)</title><rect x="51.3208%" y="933" width="18.4906%" height="15" fill="rgb(239,167,4)" fg:x="136" fg:w="49"/><text x="51.5708%" y="943.50">net7212`std::panicking::try</text></g><g><title>net7212`__rust_try (49 samples, 18.49%)</title><rect x="51.3208%" y="917" width="18.4906%" height="15" fill="rgb(209,217,16)" fg:x="136" fg:w="49"/><text x="51.5708%" y="927.50">net7212`__rust_try</text></g><g><title>net7212`std::panicking::try::do_call (49 samples, 18.49%)</title><rect x="51.3208%" y="901" width="18.4906%" height="15" fill="rgb(219,88,35)" fg:x="136" fg:w="49"/><text x="51.5708%" y="911.50">net7212`std::panicking::try::..</text></g><g><title>net7212`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (49 samples, 18.49%)</title><rect x="51.3208%" y="885" width="18.4906%" height="15" fill="rgb(220,193,23)" fg:x="136" fg:w="49"/><text x="51.5708%" y="895.50">net7212`&lt;core::panic::unwind_..</text></g><g><title>net7212`std::thread::scoped::scope::_{{closure}} (49 samples, 18.49%)</title><rect x="51.3208%" y="869" width="18.4906%" height="15" fill="rgb(230,90,52)" fg:x="136" fg:w="49"/><text x="51.5708%" y="879.50">net7212`std::thread::scoped::..</text></g><g><title>net7212`zstd_lib::block::Block::decode::_{{closure}} (49 samples, 18.49%)</title><rect x="51.3208%" y="853" width="18.4906%" height="15" fill="rgb(252,106,19)" fg:x="136" fg:w="49"/><text x="51.5708%" y="863.50">net7212`zstd_lib::block::Bloc..</text></g><g><title>net7212`zstd_lib::decoders::decoding_context::DecodingContext::execute_sequences (49 samples, 18.49%)</title><rect x="51.3208%" y="837" width="18.4906%" height="15" fill="rgb(206,74,20)" fg:x="136" fg:w="49"/><text x="51.5708%" y="847.50">net7212`zstd_lib::decoders::d..</text></g><g><title>net7212`zstd_lib::decoders::decoding_context::DecodingContext::execute_sequence (42 samples, 15.85%)</title><rect x="53.9623%" y="821" width="15.8491%" height="15" fill="rgb(230,138,44)" fg:x="143" fg:w="42"/><text x="54.2123%" y="831.50">net7212`zstd_lib::decode..</text></g><g><title>net7212`zstd_lib::decoders::decoding_context::DecodingContext::compute_offset (1 samples, 0.38%)</title><rect x="69.4340%" y="805" width="0.3774%" height="15" fill="rgb(235,182,43)" fg:x="184" fg:w="1"/><text x="69.6840%" y="815.50"></text></g><g><title>net7212`core::ptr::read_unaligned (1 samples, 0.38%)</title><rect x="69.8113%" y="949" width="0.3774%" height="15" fill="rgb(242,16,51)" fg:x="185" fg:w="1"/><text x="70.0613%" y="959.50"></text></g><g><title>net7212`zstd_lib::decode::_{{closure}}::_{{closure}}::_{{closure}} (51 samples, 19.25%)</title><rect x="51.3208%" y="997" width="19.2453%" height="15" fill="rgb(248,9,4)" fg:x="136" fg:w="51"/><text x="51.5708%" y="1007.50">net7212`zstd_lib::decode::_{{c..</text></g><g><title>net7212`zstd_lib::frame::Frame::decode (51 samples, 19.25%)</title><rect x="51.3208%" y="981" width="19.2453%" height="15" fill="rgb(210,31,22)" fg:x="136" fg:w="51"/><text x="51.5708%" y="991.50">net7212`zstd_lib::frame::Frame..</text></g><g><title>net7212`zstd_lib::frame::ZstandardFrame::verify_checksum (2 samples, 0.75%)</title><rect x="69.8113%" y="965" width="0.7547%" height="15" fill="rgb(239,54,39)" fg:x="185" fg:w="2"/><text x="70.0613%" y="975.50"></text></g><g><title>net7212`xxhash_rust::xxh64::xxh64 (1 samples, 0.38%)</title><rect x="70.1887%" y="949" width="0.3774%" height="15" fill="rgb(230,99,41)" fg:x="186" fg:w="1"/><text x="70.4387%" y="959.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.38%)</title><rect x="72.0755%" y="981" width="0.3774%" height="15" fill="rgb(253,106,12)" fg:x="191" fg:w="1"/><text x="72.3255%" y="991.50"></text></g><g><title>net7212`alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.38%)</title><rect x="72.4528%" y="981" width="0.3774%" height="15" fill="rgb(213,46,41)" fg:x="192" fg:w="1"/><text x="72.7028%" y="991.50"></text></g><g><title>net7212`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.38%)</title><rect x="72.4528%" y="965" width="0.3774%" height="15" fill="rgb(215,133,35)" fg:x="192" fg:w="1"/><text x="72.7028%" y="975.50"></text></g><g><title>net7212`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.38%)</title><rect x="72.4528%" y="949" width="0.3774%" height="15" fill="rgb(213,28,5)" fg:x="192" fg:w="1"/><text x="72.7028%" y="959.50"></text></g><g><title>net7212`alloc::raw_vec::finish_grow (1 samples, 0.38%)</title><rect x="72.4528%" y="933" width="0.3774%" height="15" fill="rgb(215,77,49)" fg:x="192" fg:w="1"/><text x="72.7028%" y="943.50"></text></g><g><title>net7212`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.38%)</title><rect x="72.4528%" y="917" width="0.3774%" height="15" fill="rgb(248,100,22)" fg:x="192" fg:w="1"/><text x="72.7028%" y="927.50"></text></g><g><title>net7212`alloc::alloc::Global::grow_impl (1 samples, 0.38%)</title><rect x="72.4528%" y="901" width="0.3774%" height="15" fill="rgb(208,67,9)" fg:x="192" fg:w="1"/><text x="72.7028%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.38%)</title><rect x="72.4528%" y="885" width="0.3774%" height="15" fill="rgb(219,133,21)" fg:x="192" fg:w="1"/><text x="72.7028%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.38%)</title><rect x="72.4528%" y="869" width="0.3774%" height="15" fill="rgb(246,46,29)" fg:x="192" fg:w="1"/><text x="72.7028%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.38%)</title><rect x="72.4528%" y="853" width="0.3774%" height="15" fill="rgb(246,185,52)" fg:x="192" fg:w="1"/><text x="72.7028%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.38%)</title><rect x="72.4528%" y="837" width="0.3774%" height="15" fill="rgb(252,136,11)" fg:x="192" fg:w="1"/><text x="72.7028%" y="847.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.38%)</title><rect x="72.8302%" y="949" width="0.3774%" height="15" fill="rgb(219,138,53)" fg:x="193" fg:w="1"/><text x="73.0802%" y="959.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.38%)</title><rect x="73.2075%" y="949" width="0.3774%" height="15" fill="rgb(211,51,23)" fg:x="194" fg:w="1"/><text x="73.4575%" y="959.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="73.5849%" y="949" width="0.3774%" height="15" fill="rgb(247,221,28)" fg:x="195" fg:w="1"/><text x="73.8349%" y="959.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.38%)</title><rect x="74.3396%" y="933" width="0.3774%" height="15" fill="rgb(251,222,45)" fg:x="197" fg:w="1"/><text x="74.5896%" y="943.50"></text></g><g><title>net7212`&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.38%)</title><rect x="76.6038%" y="917" width="0.3774%" height="15" fill="rgb(217,162,53)" fg:x="203" fg:w="1"/><text x="76.8538%" y="927.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (1 samples, 0.38%)</title><rect x="77.7358%" y="837" width="0.3774%" height="15" fill="rgb(229,93,14)" fg:x="206" fg:w="1"/><text x="77.9858%" y="847.50"></text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (1 samples, 0.38%)</title><rect x="77.7358%" y="821" width="0.3774%" height="15" fill="rgb(209,67,49)" fg:x="206" fg:w="1"/><text x="77.9858%" y="831.50"></text></g><g><title>net7212`core::cmp::min (1 samples, 0.38%)</title><rect x="77.7358%" y="805" width="0.3774%" height="15" fill="rgb(213,87,29)" fg:x="206" fg:w="1"/><text x="77.9858%" y="815.50"></text></g><g><title>net7212`core::cmp::Ord::min (1 samples, 0.38%)</title><rect x="77.7358%" y="789" width="0.3774%" height="15" fill="rgb(205,151,52)" fg:x="206" fg:w="1"/><text x="77.9858%" y="799.50"></text></g><g><title>net7212`core::cmp::min_by (1 samples, 0.38%)</title><rect x="77.7358%" y="773" width="0.3774%" height="15" fill="rgb(253,215,39)" fg:x="206" fg:w="1"/><text x="77.9858%" y="783.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (2 samples, 0.75%)</title><rect x="77.7358%" y="853" width="0.7547%" height="15" fill="rgb(221,220,41)" fg:x="206" fg:w="2"/><text x="77.9858%" y="863.50"></text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (1 samples, 0.38%)</title><rect x="78.1132%" y="837" width="0.3774%" height="15" fill="rgb(218,133,21)" fg:x="207" fg:w="1"/><text x="78.3632%" y="847.50"></text></g><g><title>net7212`core::cmp::min (1 samples, 0.38%)</title><rect x="78.1132%" y="821" width="0.3774%" height="15" fill="rgb(221,193,43)" fg:x="207" fg:w="1"/><text x="78.3632%" y="831.50"></text></g><g><title>net7212`core::cmp::Ord::min (1 samples, 0.38%)</title><rect x="78.1132%" y="805" width="0.3774%" height="15" fill="rgb(240,128,52)" fg:x="207" fg:w="1"/><text x="78.3632%" y="815.50"></text></g><g><title>net7212`core::cmp::min_by (1 samples, 0.38%)</title><rect x="78.1132%" y="789" width="0.3774%" height="15" fill="rgb(253,114,12)" fg:x="207" fg:w="1"/><text x="78.3632%" y="799.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (4 samples, 1.51%)</title><rect x="77.7358%" y="869" width="1.5094%" height="15" fill="rgb(215,223,47)" fg:x="206" fg:w="4"/><text x="77.9858%" y="879.50"></text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (2 samples, 0.75%)</title><rect x="78.4906%" y="853" width="0.7547%" height="15" fill="rgb(248,225,23)" fg:x="208" fg:w="2"/><text x="78.7406%" y="863.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="78.8679%" y="837" width="0.3774%" height="15" fill="rgb(250,108,0)" fg:x="209" fg:w="1"/><text x="79.1179%" y="847.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (6 samples, 2.26%)</title><rect x="77.3585%" y="885" width="2.2642%" height="15" fill="rgb(228,208,7)" fg:x="205" fg:w="6"/><text x="77.6085%" y="895.50">n..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (1 samples, 0.38%)</title><rect x="79.2453%" y="869" width="0.3774%" height="15" fill="rgb(244,45,10)" fg:x="210" fg:w="1"/><text x="79.4953%" y="879.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="79.2453%" y="853" width="0.3774%" height="15" fill="rgb(207,125,25)" fg:x="210" fg:w="1"/><text x="79.4953%" y="863.50"></text></g><g><title>net7212`core::cmp::Ord::min (1 samples, 0.38%)</title><rect x="80.0000%" y="869" width="0.3774%" height="15" fill="rgb(210,195,18)" fg:x="212" fg:w="1"/><text x="80.2500%" y="879.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (10 samples, 3.77%)</title><rect x="76.9811%" y="901" width="3.7736%" height="15" fill="rgb(249,80,12)" fg:x="204" fg:w="10"/><text x="77.2311%" y="911.50">net7..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (3 samples, 1.13%)</title><rect x="79.6226%" y="885" width="1.1321%" height="15" fill="rgb(221,65,9)" fg:x="211" fg:w="3"/><text x="79.8726%" y="895.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="80.3774%" y="869" width="0.3774%" height="15" fill="rgb(235,49,36)" fg:x="213" fg:w="1"/><text x="80.6274%" y="879.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.38%)</title><rect x="80.7547%" y="885" width="0.3774%" height="15" fill="rgb(225,32,20)" fg:x="214" fg:w="1"/><text x="81.0047%" y="895.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.38%)</title><rect x="80.7547%" y="869" width="0.3774%" height="15" fill="rgb(215,141,46)" fg:x="214" fg:w="1"/><text x="81.0047%" y="879.50"></text></g><g><title>net7212`core::cmp::min (2 samples, 0.75%)</title><rect x="81.1321%" y="885" width="0.7547%" height="15" fill="rgb(250,160,47)" fg:x="215" fg:w="2"/><text x="81.3821%" y="895.50"></text></g><g><title>net7212`core::cmp::Ord::min (2 samples, 0.75%)</title><rect x="81.1321%" y="869" width="0.7547%" height="15" fill="rgb(216,222,40)" fg:x="215" fg:w="2"/><text x="81.3821%" y="879.50"></text></g><g><title>net7212`core::cmp::min_by (2 samples, 0.75%)</title><rect x="81.1321%" y="853" width="0.7547%" height="15" fill="rgb(234,217,39)" fg:x="215" fg:w="2"/><text x="81.3821%" y="863.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::iter (1 samples, 0.38%)</title><rect x="81.8868%" y="885" width="0.3774%" height="15" fill="rgb(207,178,40)" fg:x="217" fg:w="1"/><text x="82.1368%" y="895.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (15 samples, 5.66%)</title><rect x="76.9811%" y="917" width="5.6604%" height="15" fill="rgb(221,136,13)" fg:x="204" fg:w="15"/><text x="77.2311%" y="927.50">net7212..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (5 samples, 1.89%)</title><rect x="80.7547%" y="901" width="1.8868%" height="15" fill="rgb(249,199,10)" fg:x="214" fg:w="5"/><text x="81.0047%" y="911.50">n..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::available_bits (1 samples, 0.38%)</title><rect x="82.2642%" y="885" width="0.3774%" height="15" fill="rgb(249,222,13)" fg:x="218" fg:w="1"/><text x="82.5142%" y="895.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.75%)</title><rect x="83.0189%" y="901" width="0.7547%" height="15" fill="rgb(244,185,38)" fg:x="220" fg:w="2"/><text x="83.2689%" y="911.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.75%)</title><rect x="83.0189%" y="885" width="0.7547%" height="15" fill="rgb(236,202,9)" fg:x="220" fg:w="2"/><text x="83.2689%" y="895.50"></text></g><g><title>net7212`core::cmp::min (1 samples, 0.38%)</title><rect x="83.7736%" y="901" width="0.3774%" height="15" fill="rgb(250,229,37)" fg:x="222" fg:w="1"/><text x="84.0236%" y="911.50"></text></g><g><title>net7212`core::cmp::Ord::min (1 samples, 0.38%)</title><rect x="83.7736%" y="885" width="0.3774%" height="15" fill="rgb(206,174,23)" fg:x="222" fg:w="1"/><text x="84.0236%" y="895.50"></text></g><g><title>net7212`core::cmp::min_by (1 samples, 0.38%)</title><rect x="83.7736%" y="869" width="0.3774%" height="15" fill="rgb(211,33,43)" fg:x="222" fg:w="1"/><text x="84.0236%" y="879.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (2 samples, 0.75%)</title><rect x="84.1509%" y="901" width="0.7547%" height="15" fill="rgb(245,58,50)" fg:x="223" fg:w="2"/><text x="84.4009%" y="911.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (28 samples, 10.57%)</title><rect x="74.7170%" y="933" width="10.5660%" height="15" fill="rgb(244,68,36)" fg:x="198" fg:w="28"/><text x="74.9670%" y="943.50">net7212`zstd_li..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (7 samples, 2.64%)</title><rect x="82.6415%" y="917" width="2.6415%" height="15" fill="rgb(232,229,15)" fg:x="219" fg:w="7"/><text x="82.8915%" y="927.50">ne..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::available_bits (1 samples, 0.38%)</title><rect x="84.9057%" y="901" width="0.3774%" height="15" fill="rgb(254,30,23)" fg:x="225" fg:w="1"/><text x="85.1557%" y="911.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.13%)</title><rect x="87.1698%" y="917" width="1.1321%" height="15" fill="rgb(235,160,14)" fg:x="231" fg:w="3"/><text x="87.4198%" y="927.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (2 samples, 0.75%)</title><rect x="87.5472%" y="901" width="0.7547%" height="15" fill="rgb(212,155,44)" fg:x="232" fg:w="2"/><text x="87.7972%" y="911.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (39 samples, 14.72%)</title><rect x="73.9623%" y="949" width="14.7170%" height="15" fill="rgb(226,2,50)" fg:x="196" fg:w="39"/><text x="74.2123%" y="959.50">net7212`zstd_lib::deco..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (9 samples, 3.40%)</title><rect x="85.2830%" y="933" width="3.3962%" height="15" fill="rgb(234,177,6)" fg:x="226" fg:w="9"/><text x="85.5330%" y="943.50">net..</text></g><g><title>net7212`core::cmp::min (1 samples, 0.38%)</title><rect x="88.3019%" y="917" width="0.3774%" height="15" fill="rgb(217,24,9)" fg:x="234" fg:w="1"/><text x="88.5519%" y="927.50"></text></g><g><title>net7212`core::cmp::Ord::min (1 samples, 0.38%)</title><rect x="88.3019%" y="901" width="0.3774%" height="15" fill="rgb(220,13,46)" fg:x="234" fg:w="1"/><text x="88.5519%" y="911.50"></text></g><g><title>net7212`core::cmp::min_by (1 samples, 0.38%)</title><rect x="88.3019%" y="885" width="0.3774%" height="15" fill="rgb(239,221,27)" fg:x="234" fg:w="1"/><text x="88.5519%" y="895.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.13%)</title><rect x="89.4340%" y="933" width="1.1321%" height="15" fill="rgb(222,198,25)" fg:x="237" fg:w="3"/><text x="89.6840%" y="943.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 1.13%)</title><rect x="89.4340%" y="917" width="1.1321%" height="15" fill="rgb(211,99,13)" fg:x="237" fg:w="3"/><text x="89.6840%" y="927.50"></text></g><g><title>net7212`core::cmp::min (3 samples, 1.13%)</title><rect x="90.5660%" y="933" width="1.1321%" height="15" fill="rgb(232,111,31)" fg:x="240" fg:w="3"/><text x="90.8160%" y="943.50"></text></g><g><title>net7212`core::cmp::Ord::min (2 samples, 0.75%)</title><rect x="90.9434%" y="917" width="0.7547%" height="15" fill="rgb(245,82,37)" fg:x="241" fg:w="2"/><text x="91.1934%" y="927.50"></text></g><g><title>net7212`core::cmp::min_by (2 samples, 0.75%)</title><rect x="90.9434%" y="901" width="0.7547%" height="15" fill="rgb(227,149,46)" fg:x="241" fg:w="2"/><text x="91.1934%" y="911.50"></text></g><g><title>net7212`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.38%)</title><rect x="91.3208%" y="885" width="0.3774%" height="15" fill="rgb(218,36,50)" fg:x="242" fg:w="1"/><text x="91.5708%" y="895.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="91.6981%" y="933" width="0.3774%" height="15" fill="rgb(226,80,48)" fg:x="243" fg:w="1"/><text x="91.9481%" y="943.50"></text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::available_bits (3 samples, 1.13%)</title><rect x="92.0755%" y="933" width="1.1321%" height="15" fill="rgb(238,224,15)" fg:x="244" fg:w="3"/><text x="92.3255%" y="943.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (55 samples, 20.75%)</title><rect x="72.8302%" y="965" width="20.7547%" height="15" fill="rgb(241,136,10)" fg:x="193" fg:w="55"/><text x="73.0802%" y="975.50">net7212`zstd_lib::decoders::huffm..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (13 samples, 4.91%)</title><rect x="88.6792%" y="949" width="4.9057%" height="15" fill="rgb(208,32,45)" fg:x="235" fg:w="13"/><text x="88.9292%" y="959.50">net721..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::is_empty (1 samples, 0.38%)</title><rect x="93.2075%" y="933" width="0.3774%" height="15" fill="rgb(207,135,9)" fg:x="247" fg:w="1"/><text x="93.4575%" y="943.50"></text></g><g><title>net7212`&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.75%)</title><rect x="95.0943%" y="949" width="0.7547%" height="15" fill="rgb(206,86,44)" fg:x="252" fg:w="2"/><text x="95.3443%" y="959.50"></text></g><g><title>net7212`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.38%)</title><rect x="95.4717%" y="933" width="0.3774%" height="15" fill="rgb(245,177,15)" fg:x="253" fg:w="1"/><text x="95.7217%" y="943.50"></text></g><g><title>net7212`core::cmp::Ord::min (1 samples, 0.38%)</title><rect x="95.8491%" y="949" width="0.3774%" height="15" fill="rgb(206,64,50)" fg:x="254" fg:w="1"/><text x="96.0991%" y="959.50"></text></g><g><title>net7212`core::cmp::min (7 samples, 2.64%)</title><rect x="96.2264%" y="949" width="2.6415%" height="15" fill="rgb(234,36,40)" fg:x="255" fg:w="7"/><text x="96.4764%" y="959.50">ne..</text></g><g><title>net7212`core::cmp::Ord::min (6 samples, 2.26%)</title><rect x="96.6038%" y="933" width="2.2642%" height="15" fill="rgb(213,64,8)" fg:x="256" fg:w="6"/><text x="96.8538%" y="943.50">n..</text></g><g><title>net7212`core::cmp::min_by (5 samples, 1.89%)</title><rect x="96.9811%" y="917" width="1.8868%" height="15" fill="rgb(210,75,36)" fg:x="257" fg:w="5"/><text x="97.2311%" y="927.50">n..</text></g><g><title>net7212`core::ops::function::FnOnce::call_once (1 samples, 0.38%)</title><rect x="98.4906%" y="901" width="0.3774%" height="15" fill="rgb(229,88,21)" fg:x="261" fg:w="1"/><text x="98.7406%" y="911.50"></text></g><g><title>net7212`core::cmp::impls::_&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.38%)</title><rect x="98.4906%" y="885" width="0.3774%" height="15" fill="rgb(252,204,47)" fg:x="261" fg:w="1"/><text x="98.7406%" y="895.50"></text></g><g><title>net7212`core::slice::_&lt;impl [T]&gt;::split_at (1 samples, 0.38%)</title><rect x="98.8679%" y="949" width="0.3774%" height="15" fill="rgb(208,77,27)" fg:x="262" fg:w="1"/><text x="99.1179%" y="959.50"></text></g><g><title>net7212`zstd_lib::decoders::huffman::HuffmanDecoder::decode (71 samples, 26.79%)</title><rect x="72.8302%" y="981" width="26.7925%" height="15" fill="rgb(221,76,26)" fg:x="193" fg:w="71"/><text x="73.0802%" y="991.50">net7212`zstd_lib::decoders::huffman::Huffma..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::take (16 samples, 6.04%)</title><rect x="93.5849%" y="965" width="6.0377%" height="15" fill="rgb(225,139,18)" fg:x="248" fg:w="16"/><text x="93.8349%" y="975.50">net7212`..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::is_empty (1 samples, 0.38%)</title><rect x="99.2453%" y="949" width="0.3774%" height="15" fill="rgb(230,137,11)" fg:x="263" fg:w="1"/><text x="99.4953%" y="959.50"></text></g><g><title>all (265 samples, 100%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(212,28,1)" fg:x="0" fg:w="265"/><text x="0.2500%" y="1199.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (234 samples, 88.30%)</title><rect x="11.6981%" y="1173" width="88.3019%" height="15" fill="rgb(248,164,17)" fg:x="31" fg:w="234"/><text x="11.9481%" y="1183.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (234 samples, 88.30%)</title><rect x="11.6981%" y="1157" width="88.3019%" height="15" fill="rgb(222,171,42)" fg:x="31" fg:w="234"/><text x="11.9481%" y="1167.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>net7212`std::sys::unix::thread::Thread::new::thread_start (234 samples, 88.30%)</title><rect x="11.6981%" y="1141" width="88.3019%" height="15" fill="rgb(243,84,45)" fg:x="31" fg:w="234"/><text x="11.9481%" y="1151.50">net7212`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>net7212`core::ops::function::FnOnce::call_once{{vtable.shim}} (233 samples, 87.92%)</title><rect x="12.0755%" y="1125" width="87.9245%" height="15" fill="rgb(252,49,23)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1135.50">net7212`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>net7212`std::thread::Builder::spawn_unchecked_::_{{closure}} (233 samples, 87.92%)</title><rect x="12.0755%" y="1109" width="87.9245%" height="15" fill="rgb(215,19,7)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1119.50">net7212`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>net7212`std::panicking::try (233 samples, 87.92%)</title><rect x="12.0755%" y="1093" width="87.9245%" height="15" fill="rgb(238,81,41)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1103.50">net7212`std::panicking::try</text></g><g><title>net7212`__rust_try (233 samples, 87.92%)</title><rect x="12.0755%" y="1077" width="87.9245%" height="15" fill="rgb(210,199,37)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1087.50">net7212`__rust_try</text></g><g><title>net7212`std::panicking::try::do_call (233 samples, 87.92%)</title><rect x="12.0755%" y="1061" width="87.9245%" height="15" fill="rgb(244,192,49)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1071.50">net7212`std::panicking::try::do_call</text></g><g><title>net7212`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (233 samples, 87.92%)</title><rect x="12.0755%" y="1045" width="87.9245%" height="15" fill="rgb(226,211,11)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1055.50">net7212`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>net7212`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (233 samples, 87.92%)</title><rect x="12.0755%" y="1029" width="87.9245%" height="15" fill="rgb(236,162,54)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1039.50">net7212`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>net7212`std::sys_common::backtrace::__rust_begin_short_backtrace (233 samples, 87.92%)</title><rect x="12.0755%" y="1013" width="87.9245%" height="15" fill="rgb(220,229,9)" fg:x="32" fg:w="233"/><text x="12.3255%" y="1023.50">net7212`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>net7212`zstd_lib::literals::decode_4_streams::_{{closure}}::_{{closure}} (78 samples, 29.43%)</title><rect x="70.5660%" y="997" width="29.4340%" height="15" fill="rgb(250,87,22)" fg:x="187" fg:w="78"/><text x="70.8160%" y="1007.50">net7212`zstd_lib::literals::decode_4_streams::_..</text></g><g><title>net7212`zstd_lib::parsing::backward_bit_parser::BackwardBitParser::available_bits (1 samples, 0.38%)</title><rect x="99.6226%" y="981" width="0.3774%" height="15" fill="rgb(239,43,17)" fg:x="264" fg:w="1"/><text x="99.8726%" y="991.50"></text></g></svg></svg>